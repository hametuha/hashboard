{"version":3,"sources":["components/input.js"],"names":["$","Vue","component","template","props","id","type","String","required","original","default","title","description","validator","value","indexOf","computed","editingLabel","HbComponentsInput","editing","isTextArea","this","originalLines","split","data","current","editLabel","edit","noValue","mounted","tooltip","delay","methods","checkboxHandler","$emit","enterEditing","finishEditing","jQuery"],"mappings":"AAAA;;;;;CASA,SAAWA,GAITC,IAAIC,UAAU,YACZC,SAAAA,ggDAmCAC,OACEC,IACEC,KAAMC,OACNC,UAAU,GAEZC,UACEH,KAAMC,OACNG,UAAS,IAEXC,OACEL,KAAMC,OACNC,UAAU,GAEZI,aACEN,KAAMC,OACNG,UAAS,IAEXJ,MACEA,KAAMC,OACNG,UAAS,OACTG,UAAW,SAAUC,GACnB,UACE,OAAQ,WAAY,QAAS,SAAU,MACvC,WAAY,OACZC,QAAQD,MAIhBE,UACEC,aAAc,WACZ,MAAOC,mBAAkBC,SAE3BC,WAAY,WACV,MAAqB,aAAdC,KAAKf,MAEdgB,cAAe,WACb,MAAOD,MAAKZ,SAASc,MAAM,QAG/BC,KAAM,WACJ,OACEL,SAAS,EACTM,QAAS,GACTR,aAAcC,kBAAkBC,QAChCO,UAAWR,kBAAkBS,KAC7BC,QAASV,kBAAkBU,UAI/BC,QAAS,WACP7B,EAAAA,cAAgBqB,KAAKhB,GAArB,kBAAyCyB,SAASC,MAAO,MAG3DC,SAEEC,gBAAiB,WACZZ,KAAKF,QAENE,KAAKI,QAAUJ,KAAKZ,SACbY,KAAKI,UAAYJ,KAAKZ,UAC7BY,KAAKa,MAAM,eAAgBb,KAAKI,QAASJ,KAAKhB,KAIlD8B,aAAc,WACZd,KAAKF,SAAU,EACfE,KAAKI,QAAUJ,KAAKZ,SACpBY,KAAKa,MAAM,eAGbE,cAAe,WACbf,KAAKF,SAAW,EAChBE,KAAKZ,SAAWY,KAAKI,QACrBJ,KAAKa,MAAM,cAAeb,KAAKZ,eAMpC4B","file":"../../components/input.js","sourcesContent":["/*!\n * Description\n *\n * wpdeps=vue-js\n */\n\n/*global Vue: false*/\n/*global HbComponentsInput: false*/\n\n(function ($) {\n\n  'use strict';\n\n  Vue.component('hb-input', {\n    template: `\n      <div class=\"hb-input-field\">\n        <div class=\"row\">\n            <div class=\"col s10\">\n                <label :for=\"id\">\n                    {{title}}\n                    <a v-if=\"description\" class=\"hb-input-field-tooltip tooltipped\"\n                       data-position=\"top\" :data-tooltip=\"description\">\n                      <i class=\"material-icons\">help</i>\n                    </a>\n                </label>\n                \n                <input v-if=\"!isTextArea && editing\" :id=\"id\" :type=\"type\" v-model=\"current\" class=\"validate\" />\n                \n                <textarea v-if=\"isTextArea && editing\" :id=\"id\" v-model=\"current\" class=\"validate materialize-textarea\"></textarea>\n                \n                <div class=\"hb-input-field-value\" v-if=\"original && !editing\">\n                    <div v-for=\"line in originalLines\">{{line}}</div>\n                </div>\n                <p class=\"hb-input-field-no-value\" v-if=\"!original && !editing\">{{noValue}}</p>\n                <p class=\"hb-input-field-helper\"></p>\n            </div>\n            <div class=\"col s2\">\n              <div class=\"switch\">\n               <label>\n                 <input type=\"checkbox\" v-model=\"editing\" @click=\"checkboxHandler\">\n                 <span class=\"lever\"></span>\n                 <span v-if=\"editing\">{{editingLabel}}</span>\n                 <span v-else=\"editing\">{{editLabel}}</span>\n               </label>\n              </div>\n            </div>\n        </div>\n      </div>\n    `,\n    props: {\n      id: {\n        type: String,\n        required: true,\n      },\n      original: {\n        type: String,\n        default: \"\",\n      },\n      title: {\n        type: String,\n        required: true,\n      },\n      description: {\n        type: String,\n        default: \"\"\n      },\n      type: {\n        type: String,\n        default: \"text\",\n        validator: function (value) {\n          return -1 < [\n            'text', 'password', 'email', 'number', 'url',\n            'textarea', 'tel',\n          ].indexOf(value);\n        }\n      },\n    },\n    computed: {\n      editingLabel: function() {\n        return HbComponentsInput.editing;\n      },\n      isTextArea: function(){\n        return this.type === 'textarea';\n      },\n      originalLines: function(){\n        return this.original.split(\"\\n\");\n      },\n    },\n    data: function(){\n      return {\n        editing: false,\n        current: \"\",\n        editingLabel: HbComponentsInput.editing,\n        editLabel: HbComponentsInput.edit,\n        noValue: HbComponentsInput.noValue,\n      };\n    },\n\n    mounted: function(){\n      $(`label[for=\"${this.id}\"] .tooltipped`).tooltip({delay: 50});\n    },\n\n    methods: {\n\n      checkboxHandler: function(){\n        if(this.editing){\n          // Enter edit mode\n          this.current = this.original;\n        }else if(this.current !== this.original){\n          this.$emit('data-changed', this.current, this.id);\n        }\n      },\n\n      enterEditing: function() {\n        this.editing = true;\n        this.current = this.original;\n        this.$emit('enter-edit');\n      },\n\n      finishEditing: function(){\n        this.editing  = false;\n        this.original = this.current;\n        this.$emit('finish-edit', this.original);\n      }\n    }\n  });\n\n\n})(jQuery);\n"]}